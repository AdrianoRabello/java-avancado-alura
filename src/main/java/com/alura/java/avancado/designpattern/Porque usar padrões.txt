/O primeiro, e talvez mais importante ponto desse curso, é entender o bom uso de orientação a objetos, que todos os padrões de projeto fazem tanto uso.

Você deve ter reparado, ao longo do curso, que todos os padrões de projeto tentam desacoplar seu código, além de criar classes coesas, com poucas responsabilidades.
 Para isso, todos eles fazem uso de abstrações, sejam elas implementadas através de interfaces ou classes abstratas, e separam o tempo
  todo as diversas responsabilidades em pequenas classes. Observe como os padrões resolveram problemas complexos do mundo procedural de maneira clara e simples.
  Veja as ideias por trás dele, e adapte-os para o seu problema. Lembre-se que no final, o que importa é código de qualidade.

Existem ainda muitos outros padrões de projeto espalhados por aí. Padrões que visam ajudar na solução dos mais diversos tipos de problemas. Como sempre,
 ao ver um padrão, entenda a motivação do padrão; a razão dele existir. Não vá direto para a implementação. Um padrão é mais do que uma implementação,
  mas sim um conceito,  uma ideia de como resolver um problema.

Esperamos que essa ideia tenha ficado clara ao longo do curso. Refaça os exercícios, leia novamente as definições dos padrões que você estudou em livros ou internet,
 e reforce seus conceitos.

Mas no final, lembre-se: o que importa é código de qualidade. Se você implementou uma solução que faz uso de boa orientação a objetos, mas não sabe qual padrão usou,
 não tem problema; o seu código e os outros desenvolvedores agradecem mesmo assim!